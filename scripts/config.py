import os
import subprocess

# root path
file_path = os.path.abspath(__file__)
root_dir = os.path.dirname(os.path.dirname(os.path.normpath(file_path)))
if os.path.exists(root_dir + "/packages/llvm"):
    print("Start building llvm. This might take a few hours...")
    # build llvm
    os.system("mkdir {}/build/packages"
              .format(root_dir))
    os.system("cmake -S {}/third-party/llvm-project/llvm -B {}/build/cmake/llvm -DCMAKE_BUILD_TYPE=Release"
              .format(root_dir, root_dir))
    os.system("cmake --build {}/build/cmake/llvm"
              .format(root_dir))
    os.system("cmake -P {}/build/cmake/llvm/cmake_install.cmake -DCMAKE_INSTALL_PREFIX={}/build/packages/llvm"
              .format(root_dir, root_dir))

# xmake gen cmake
os.system("xmake project -k cmake -y")

# add llvm to CMakeLists.txt
lines = [
    '\n',
    '# auto generated by python\n',
    '\n',
    'set(CMAKE_PREFIX_PATH "${CMAKE_CURRENT_SOURCE_DIR}/build/packages/llvm/lib/cmake")\n',
    'find_package(LLVM REQUIRED CONFIG)\n',
    'target_include_directories(SSakura-frontend PRIVATE ${LLVM_INCLUDE_DIRS})\n',
    'target_include_directories(SSakura-Test PRIVATE ${LLVM_INCLUDE_DIRS})\n',
    'separate_arguments(LLVM_DEFINITIONS_LIST NATIVE_COMMAND ${LLVM_DEFINITIONS})\n',
    'add_definitions(${LLVM_DEFINITIONS_LIST})\n',
    '# visit https://releases.llvm.org/2.7/docs/UsingLibraries.html for more info \n'
    'llvm_map_components_to_libnames(llvm_libs support core irreader ipo)\n',
    'target_link_libraries(SSakura-frontend PRIVATE ${llvm_libs})\n',
    'target_include_directories(SSakura-frontend PUBLIC ${'
    'CMAKE_CURRENT_SOURCE_DIR}/third-party/fixed-containers/include)\n'
]
with open(root_dir + "/CMakeLists.txt", 'a') as file:
    file.writelines(lines)
